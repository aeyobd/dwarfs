### A Pluto.jl notebook ###
# v0.20.18

using Markdown
using InteractiveUtils

# ╔═╡ 0125bdd2-f9db-11ef-3d22-63d25909a69a
begin
	using Pkg; Pkg.activate()

	FIGDIR = "figures"

	using LilGuys
	using CairoMakie
	using Arya

end

# ╔═╡ 5013a073-b6a5-417b-b124-393a18099eca
using OrderedCollections

# ╔═╡ f5c22abc-2634-4774-8516-fbd07aa690aa
include("./paper_style.jl")

# ╔═╡ 3d07fa5b-cb39-47e1-b932-d976cc1b0371
import TOML

# ╔═╡ e8526d14-429d-48f6-b1e2-a005d4f5d949
lw = theme(:linewidth)[]/2

# ╔═╡ 5eaf3b50-886e-47ac-9a7c-80d693bc3c17
CairoMakie.activate!(type=:png)

# ╔═╡ f22aa8a5-9116-4416-9f93-f61b6c7e2a81
obs_props = TOML.parsefile(joinpath(ENV["DWARFS_ROOT"], "observations/sculptor/observed_properties.toml"))

# ╔═╡ 5bfee795-b988-4ffd-ac65-120c57648b29
ell = obs_props["ellipticity"]

# ╔═╡ 9e983a35-bb7d-4279-a9c0-190f9157007b
md"""
## Utils
"""

# ╔═╡ a74de18f-e9df-437d-bdcd-da798f98d23a
function get_a_h(galaxyname)
	obs_props = TOML.parsefile(joinpath(ENV["DWARFS_ROOT"], "observations", galaxyname, "observed_properties.toml")) |> LilGuys.collapse_errors
	a_h = obs_props["r_h"]
	return a_h
end

# ╔═╡ 9a1a580e-c694-488e-9d64-da4470775b4a
function get_ell(galaxyname)
	obs_props = TOML.parsefile(joinpath(ENV["DWARFS_ROOT"], "observations", galaxyname, "observed_properties.toml")) |> LilGuys.collapse_errors
	return obs_props["ellipticity"]
end

# ╔═╡ c725564c-e140-43da-8c6e-d40905b5aafc
get_a_h("leo1")

# ╔═╡ 6a827bb5-d4ff-4155-ad52-daa0fac7654a
get_a_h("fornax")

# ╔═╡ 01f49191-e27b-4bdc-9cbd-2c6f7dc1f17d
function get_R_h_inner(galaxyname)
	obs_props = TOML.parsefile(joinpath(ENV["DWARFS_ROOT"], "observations", galaxyname, "observed_properties.toml")) |> LilGuys.collapse_errors
	R_h = obs_props["R_h_inner"]
	return R_h
end

# ╔═╡ 338f8161-22a8-4176-a226-027f2bdf7c4a
function load_profile(galaxyname; algname="jax_eqw", inner=false, filter = true)
	@info galaxyname
	
	filename = joinpath(ENV["DWARFS_ROOT"], "observations", galaxyname, 
		"density_profiles/$(algname)_profile.toml")
	
    prof = LilGuys.SurfaceDensityProfile(filename) 
	
	@info "counts = $(sum(prof.counts))"
	

	filt = maximum.(LilGuys.error_interval.(prof.log_Sigma)).< 1

	prof.log_Sigma[.!filt] .= Measurement(NaN, NaN)

	if filter
		prof = prof |> LilGuys.filter_empty_bins
	end

	ell = get_ell(galaxyname).middle
	prof = LilGuys.scale(prof, 1/sqrt(1-ell), 1)
	
	prof
end

# ╔═╡ 4e7b4c37-bbc9-4d4d-af4c-f3c7db628254
md"""
## Sculptor
"""

# ╔═╡ 3c032178-8d48-4f9c-bcec-9bf704718ea9
prof_scl = load_profile("sculptor", algname="fiducial")

# ╔═╡ e4bab11b-79a4-48cc-8a35-feac9968635e
prof_scl_delve = load_profile("sculptor", algname="delve_rgb_sub", filter=false)

# ╔═╡ 51a2acad-9802-4afd-9e0b-41bed0f00b2b
function surf_dens_from_plot(x, y; ellipticity_correction=0)
	
	SurfaceDensityProfile(log_R=log10.(x) .+ log10(sqrt(1-ellipticity_correction)), log_Sigma=log10.(y), R_units="arcmin", log_R_bins=[])

end

# ╔═╡ f32e27e1-7d6a-4dca-9e57-b4559b4599da
prof_scl_westfall06  = let 
	x = [1.6175836181639922, 3.4217142485630205, 4.496523178618369, 5.8717259235612165, 7.570101041619523, 9.90478217757593, 12.852562054715579, 16.626019996108276, 21.747786159466106, 28.158849824674302, 36.612294723687604, 47.41800789592492, 61.94233513881526, 80.9734236436741, 104.35424703708473]
	y = [3.803948067662125, 3.685012978079982, 4.324782310585271, 3.2379593687654293, 2.369870243188047, 1.799092864014748, 0.9460465769265297, 0.5822269613073008, 0.18276074905458745, 0.12860441802703662, 0.06380033670360151, 0.02080135445993022, 0.007530052554939755, 0.004428634733901775, 0.00285565039690467]

	surf_dens_from_plot(x, y)
end

# ╔═╡ 07a7f040-fd5c-407e-b63f-cfc40ecf6b88
prof_scl_ih = let
	x = [0.41483535285032114, 1.224013779675972, 2.0265364512826634, 2.872206486796011, 3.645463382214708, 4.468749375797329, 5.299829713773175, 6.175172107557641, 6.935240046074556, 7.718669688061047, 8.548863480501474, 9.480292294116799, 10.961616174184478, 10.961616174184478, 12.04016723623085, 13.009900762729377, 13.528324518071384, 14.240949543447552, 15.191710598946997, 17.192083601675016, 17.651213777808156, 19.07177685273404, 20.175579021248442, 20.82624846813493, 23.288010520106926, 22.000058097921567, 24.583662102629425, 25.918707889359734, 28.239877534305208, 28.737702513122848, 27.062937410265985, 30.765395710718217, 29.722346710599883, 33.02118767105302, 33.07799457634824, 34.665163510654004, 36.780870732041386, 41.241810366589526, 38.20272834226754, 45.78244224049876, 41.55251930517854, 56.22809175548727, 59.23070103831906, 47.229166806468946, 52.6457208347584, 59.89616371417853, 61.10239040346114, 85.10987827707473]
	y = [54.498892697455894, 49.819545785561715, 35.359037996358865, 35.91928658580709, 28.618377867551374, 30.84471708428516, 25.02797592355859, 21.61994927193298, 16.90515983873131, 15.004693385704407, 13.944938009208006, 12.605267252449677, 9.751358604239595, 9.751358604239595, 8.357337385982735, 7.372671789113076, 5.616758706301927, 5.0643168844965665, 4.114726754706898, 3.6569922067731975, 2.533501890271397, 2.4438021743431606, 1.8854009756597219, 1.5673902916261448, 1.4879717021281589, 1.2039659468733055, 1.0914405564208916, 0.8523923126359398, 1.0240376331289716, 0.8500395382558015, 0.6906122003814955, 0.6686973579792467, 0.5680101946075888, 0.568926760951634, 0.4743295720568116, 0.2918504278785332, 0.44639720861904775, 0.32392937768568714, 0.3551105360629748, 0.29482329276248154, 0.18321809288753, 0.24810583230656752, 0.17828484658545046, 0.11995888751042802, 0.12549138598020493, 0.1194488069734898, 0.09423727323562751, 0.026157023715058944]

		surf_dens_from_plot(x, y)

end

# ╔═╡ ffa9883d-746a-44d8-8fcf-590186570053
prof_scl_hodge = let
	y = vec([7.58  5.80  4.49  3.14  2.41  1.77  0.94  0.44  0.19  0.28  0.13  0.19  0.06  0.09  0.04]')
	x = collect(0:3:42) 
	x = @. sqrt(x^2 + 1.5^2)
	@info x

	surf_dens_from_plot(x, y)
end

# ╔═╡ 9d80dd20-22f1-4cd9-99d0-3172968eb763
prof_scl.counts

# ╔═╡ 6f8a6d1e-09eb-4db4-baf0-87d8c5036ef9
prof_scl.log_R_bins

# ╔═╡ 21c92c92-5b85-4ff8-963c-f30082fb8bb9
log10(2 /( (10^2.03 *sqrt(1 - ell))^2 * ((10^0.05)^2 - 1) * π )) 

# ╔═╡ 7bfb3333-fee9-4f0c-823a-0ebe00fff967
log10(10 /( π * (10^2.08)^2 - π * (10^2.03)^2))

# ╔═╡ ed2f88ba-e6f7-416f-8482-849494f61070
let 
	y = [8, 10, 8, 15, 18, 23, 46, 61, 89, 125, 189, 258, 332, 259, 154, 123, 95, 60, 25, 14, 17, 14, 13, 11]

	fig = Figure()
	ax = Axis(fig[1,1])
	ym = (y[2:13] .+ y[end:-1:13]) ./ 2

	errorscatter!(1:12, y[1:12], yerror=sqrt.(y[1:12]) )
	errorscatter!(13:-1:2, y[13:end], yerror=sqrt.(y[13:end]), color=COLORS[2] )

	scatter!(2:13, ym, color=COLORS[3])

	y_bg = LilGuys.mean(ym[1:5])
	hlines!(y_bg)

	@info reverse(ym .- y_bg) ./ 25
	@info reverse(sqrt.(abs.(ym .- y_bg))) ./ 25
	@info y_bg / 25
	fig
end

# ╔═╡ 70b7159a-e5aa-470a-8c0d-edbdd613b25f
prof_scl_shapley = let
	# background is 0.58 so remove last few points
	y = vec([12.70  9.76  6.28  4.38  3.12  1.84  0.84  0.16  0.12  0.00]')[1:end-3]

	x = float.(collect(0:5:45))[1:end-3]
	x = @. sqrt(x^2 + 2.5^2) # add median distance, counting squares

	# note, these are the worst data of all, the counts are acknowledged to be problematic
	# and the centering is not exact and the major axis is approximate
	# these likely cause the resulting flattening of the density profile, so probably safe to ignore
	surf_dens_from_plot(x, y)

end

# ╔═╡ f48e9a20-d6f8-4693-89a2-a814a005e612
prof_scl_eskridge = let
	x = [0.9984345490956239, 2.0111082609420587, 3.0132501972222543, 3.9900111115790104, 4.99587332883491, 6.128396265596967, 7.000602646321899, 7.992768172673836, 9.067356848262532, 10.005092998375963, 11.05827309629922, 12.049930385467013, 12.965956182529963, 14.05215910756399, 14.978925950882584, 16.039104146268652, 17.03719774162188, 18.07520540159043, 19.00845161791217, 20.0285450454945, 21.16132027551743, 22.035914803636558, 23.122885359205192, 24.128271416474472, 25.167512515457116, 26.266599772127375, 27.225361990156234, 28.025263955426215, 29.136337334571234, 30.350838994427264, 32.06909761466654, 33.11145210770008, 34.49705422689658, 35.26942040548022, 36.13165156592435, 37.479847860833544, 39.103349797759705, 38.11044965008333, 41.07616066688174, 43.19359227732103, 40.179779810022346, 42.072658444158364, 44.77254798650772, 46.63151387293369, 48.16983096678028, 49.17122572437765, 51.38696133860645, 50.44702554477687, 52.80842644123641, 54.22954948563643, 54.97950573470592, 56.806561022386106, 52.35261146650599, 47.07929504404889, 57.30863642553497, 58.082971956865585, 59.97556357359895, 59.25485262029231, 62.98988836280465, 63.94108373751414, 65.21242424800751, 66.1349850663942, 68.13498871130614, 70.81403697338853, 71.99796924038505, 69.65321062575059, 74.62598098462816, 76.56023242774778, 78.56923294245455, 81.45624374953015, 91.3592014671192, 91.8927212616103, 91.05198878642736, 83.4127481944702, 82.46205900163406, 71.54632144559902, 89.03478716958868, 62.18260095636609, 75.23249241184077]
	y = [23.102912727291983, 21.73757373935638, 19.84143712735777, 18.00335314003502, 16.237588080504995, 13.662442715686659, 11.095212373395716, 9.895640618967521, 9.183422947816403, 8.026097843620146, 7.068301537985341, 6.316902981143618, 5.8848506205626165, 4.757053450071937, 4.008788013319737, 3.3697267898430083, 2.897662554088417, 2.873043439187293, 2.414361495255313, 2.2578968487141986, 2.0374400287422634, 1.6175248269466356, 1.5610650933448265, 1.4239990660473627, 1.1739439418627478, 1.1047205619063725, 0.998253065278092, 0.8169950421578883, 0.6893040614488674, 0.5281744511217292, 0.504771819097882, 0.3964179092776487, 0.39931180776641295, 0.5306181086251097, 0.43670759810702864, 0.4170951059433174, 0.5577878291701768, 0.31030148880796204, 0.32834164729976617, 0.37819138373259226, 0.20348767237127105, 0.250746325599797, 0.2499234482067418, 0.22467127522179645, 0.24579781354411556, 0.17742109475768278, 0.2327807799730887, 0.16113147795207342, 0.3384843708590043, 0.29043579968379385, 0.3490136316573734, 0.26981520980607243, 0.13306915304550238, 0.07242951223946022, 0.14947164669236346, 0.13441608274121022, 0.17035622869097186, 0.21039065983414107, 0.03390767157471336, 0.01383939650188997, 0.020577751982667026, 0.027085508436715814, 0.046387762630109464, 0.04997836063323858, 0.06530736848077771, 0.07849564252195652, 0.09522221248636509, 0.10340680015299836, 0.08474914902686734, 0.10127393303459428, 0.12218593917552498, 0.09209149908579758, 0.07686584005504256, 0.06075129906832158, 0.04113302858438415, 0.026078003368526607, 0.02722795568418186, 0.004222609309910707, 0.007017566818563486]

	# fig 6, plate J8832
	surf_dens_from_plot(x, y)
end

# ╔═╡ 6e0ca29b-42aa-483b-9ce2-5de83445aadd
prof_scl_demers = let
	x = [0.7145876682020565, 1.7113649964040034, 2.711875573026182, 3.5788676179130046, 4.573009711935964, 5.627322986379133, 6.521765387297074, 7.5224955667675015, 8.482379616463625, 9.507924917786184, 10.520952856758552, 11.532663178641426, 12.494084448275295, 13.444305972648465, 14.495325204367902, 15.482879212943391, 16.453084596507217, 17.497954948475684, 18.521963029860498, 19.49282722196907, 20.54055241096477, 21.540404179042202, 22.48930808632588, 23.504971259477237, 24.417860299648087, 25.445821232301384, 26.443916177592826, 27.466826244736396, 28.46426238148309, 29.453353609996324, 30.407747588486224, 31.50005215567646, 32.4573009711936, 33.42684754621268, 34.45744371304496, 35.415131734258594, 36.48920926504417, 37.482253344825885, 38.52426885976711, 39.43100902018699, 40.45435829302706, 41.397991731952764, 42.41080006807688, 43.42141237571851, 44.42411898082318]
	y = [83.45502871386667, 76.00236872185421, 71.74693236748242, 67.27059892856651, 62.33429275749522, 55.264484320989354, 46.75581507443571, 39.558205830911824, 34.276506961563356, 29.542919311968934, 26.320906724691174, 21.50744357071048, 17.691047057689396, 15.408811094432126, 13.91486372963519, 12.265572280445651, 11.760428573395949, 9.689724980375415, 8.868935314613086, 8.01564458154876, 7.280239075647612, 6.679795628881881, 6.663820528004628, 5.637007147480479, 5.62984589536309, 5.026648120859901, 4.194841144147742, 4.504978447385454, 4.184925564292896, 4.330904934378141, 3.7519452439645793, 4.486249018770744, 3.9243661603294178, 3.892415958574911, 3.6522385798686186, 3.527192100588049, 3.0121328136835004, 3.263878368887114, 3.0898048558798012, 3.017090603610924, 2.8270419897263577, 2.6491124178866046, 2.650765014529079, 1.8217123655543774, 2.276727307782353] .- 2.5

	y[y .<= 0] .= NaN

	surf_dens_from_plot(x, y)
end

# ╔═╡ 8e84ee14-1209-4779-a870-7bf7827f0a03
prof_scl_walcher =  let
	x = [1.4050230471875849, 1.7795481610795865, 2.2177926983272487, 2.783354585283368, 3.54916766355724, 4.43014854029282, 5.644296338956532, 7.05043134611581, 8.914747884555634, 11.234507871682455, 14.144259923505864, 17.856364282227478, 22.460418899862134, 28.531068408727567, 35.93364435508031, 44.764935547064766, 56.45430426578331]
	y = [88.79648582176287, 69.60997597038156, 86.63991836632188, 80.69654956971189, 79.66497672877293, 70.74923046588455, 60.54611140979028, 43.96428922955336, 32.496526143911, 20.52969638125334, 12.397321746945792, 6.265906397462678, 2.490019903913212, 1.1818565855859586, 0.49606435235369195, 0.12319486750519733, 0.055248771905639704]

	surf_dens_from_plot(x, y)

end

# ╔═╡ e89dd67f-0c45-48e4-8340-aeecc0da9e43
prof_scl_munoz = let
	x = [1.2030495822378846, 2.723719627207122, 3.4650570946965367, 4.37950558047619, 5.575538269863453, 7.055391100305764, 8.935686634753477, 11.318878395145619, 14.365541035158088, 18.250793536627476, 23.10063329331742, 29.3152403929276]
y = [123.70936333909273, 125.71769353086795, 117.80362120999679, 105.697589563477, 93.78985945260327, 76.66002458643891, 60.20173049430338, 44.04451962753802, 29.089201079489957, 17.190324838689016, 9.011748857914162, 3.2219759447984297]
	surf_dens_from_plot(x, y)
end

# ╔═╡ 4e2b6c97-b410-453b-aa98-db24bc9fe756
0:3:42 .+ 1.5

# ╔═╡ ab0bcc9c-bc2a-449e-a8a3-467af6044abc
log10(cosd(36))

# ╔═╡ e4f85a1e-c755-426c-9d93-71485bb2cf63
profiles = OrderedDict(
	L"Gaia" => prof_scl,
	"DELVE" => prof_scl_delve,
	"Muñoz+2018" => prof_scl_munoz,
	"Westfall+2006" => prof_scl_westfall06,
	"Walcher+2003" => prof_scl_walcher,
	"Eskridge1988" => prof_scl_eskridge,
)

# ╔═╡ 492d5e36-289d-4df6-8267-2551b4d1da77
profiles_old = OrderedDict(
	L"Gaia" => prof_scl,
	"Eskridge1988" => prof_scl_eskridge,
	"Demers+1980" => prof_scl_demers,
	"Hodge1961" => prof_scl_hodge,
)

# ╔═╡ 316d12a7-54e8-42db-9ba2-5623e07164b9
obs_props["R_h"]

# ╔═╡ 6755ed1a-5075-4148-b78a-8df77e50014a
obs_props["r_h"] * sqrt(1-ell)

# ╔═╡ 7efdd9e6-1970-4864-a177-616e256e5a7e
a_h = obs_props["r_h"]

# ╔═╡ 4c87649b-c4e5-434f-b7b8-fe523dd6f430
log10(10*a_h)

# ╔═╡ f86d7b90-0147-4490-a995-3b347e9805ab
log10(10*a_h)

# ╔═╡ 6c04f96a-b14b-4c60-91de-716c9379491f
function compare_profiles(profiles, galaxyname; title="")
	fig = Figure()
	ax = Axis(fig[1,1],
			 xlabel = L"$\log\, a$ / arcmin",
			 ylabel = L"\log\, \Sigma\ /\ \Sigma(a_h)",
			 limits=(-0.2, nothing, -4.2, nothing),
			  title = title
			 )


	a_h = get_a_h(galaxyname).middle
	
	x = LinRange(-0.5, 2.2, 1000)
	ana = LilGuys.Sersic(R_h=a_h, n=1)
	f(x) = LilGuys.surface_density.(ana, 10 .^ x) .|> log10

	lines!(x, f(x), color=:black, linewidth=lw, label="2D exponential")

	x_min = Inf
	x_max = -Inf
	for (label, prof) in profiles
		s0 = LilGuys.lerp(LilGuys.log_radii(prof), float.(LilGuys.log_surface_density(prof)))(log10(a_h))
		
		scatter!(LilGuys.log_radii(prof), LilGuys.log_surface_density(prof) .- s0, label=label)
		x_min = min(minimum(LilGuys.log_radii(prof)), x_min)
		x_max = max(maximum(LilGuys.log_radii(prof)), x_max)

		@info label, s0

	end
	scatter!(log10(a_h), 0, color=:black)
	
	axislegend(position=:lb)
	hidexdecorations!(ax, ticks=false, minorticks=false)

	
	ax_res = Axis(fig[2,1], 
		xlabel = L"$\log a$ / arcmin",
		ylabel = L"\Delta\,\log\, \Sigma"			 
	)
	
	hlines!(0, color=:black, linewidth=lw)

	for (label, prof) in profiles
		s0 = LilGuys.lerp(LilGuys.log_radii(prof), float.(LilGuys.log_surface_density(prof)))(log10(a_h))
		
		scatter!(LilGuys.log_radii(prof), LilGuys.log_surface_density(prof) .- s0 .- f(LilGuys.log_radii(prof)), label=label)
	end
	

	linkxaxes!(ax, ax_res)
	dx = x_max - x_min
	xlims!(x_min - 0.05dx, x_max + 0.05dx)
	rowsize!(fig.layout, 2, Relative(0.2))
	rowgap!(fig.layout, 0.)
	fig

end

# ╔═╡ 4314ec9e-8359-4b2a-8eea-30f71d92b743
compare_profiles(profiles, "sculptor")

# ╔═╡ a991a4fb-8037-485b-b48c-0f73d14bd0b5
@savefig "scl_literatre_profiles" compare_profiles(merge(profiles, profiles_old), "sculptor", title="Sculptor")

# ╔═╡ 4cb354cb-4f07-4871-92dc-fd479b1b546d
compare_profiles(OrderedDict(
	"Gaia" => prof_scl,
	"shapley38" => prof_scl_shapley,
	
), "sculptor"
)

# ╔═╡ ad36eb3e-5a81-4803-ad8c-4583649c6b6f
md"""
# Ursa Minor
"""

# ╔═╡ 977f1b17-d0cd-414b-ac5d-9bd0e7e79f91
prof_umi = load_profile("ursa_minor", algname="fiducial")

# ╔═╡ 186fbcec-d10a-4894-86c9-b0733dc9d7f1
prof_umi_unions = load_profile("ursa_minor", algname="unions_sub", filter=false)

# ╔═╡ f8636f32-78b6-4237-aa13-cfcc0ec07d4a
prof_umi_hodge1964 = let
	r_qroot = [1.1749241891852864, 1.3928954436497012, 1.5536817582332951, 1.662498916988361, 1.7661676790819911, 1.84564436785814, 1.9144603714007913, 1.9876026454364295, 2.0466339998267182, 2.1003013179048295, 2.157338005525766, 2.2005333230647786, 2.250534767080297, 2.2931101206234294, 2.3337986272225804, 2.3757405392916624]
	log_N = [0.85007072135785, 0.7782507793081666, 0.7000453165982341, 0.6112522486645335, 0.5315499649826287, 0.4423311956715783, 0.3225717856112935, 0.21039260652833658, 0.10722181788220442, -0.04655250545859024, -0.1545845291880089, -0.2438307631040496, -0.33626289119896735, -0.42954642204858484, -0.5572293706485767, -0.6877411735625713]

	surf_dens_from_plot(r_qroot .^4, 10 .^ log_N)
end


# ╔═╡ d8243837-f9fa-4fed-bd2d-f773d5abb021
prof_umi_kleyna = let
	# kleyna 1998, top of Fig. 5
	x = [1.5683306948736442, 3.756726854867074, 4.906147485599572, 5.988181342666751, 6.915136663207678, 7.757148097491587, 8.57164078872496, 9.368579355006046, 10.200541932497414, 10.975668787326457, 11.685507594986278, 12.498898579292046, 13.254923859254513, 14.109969023739017, 14.768307426806416, 15.470633660319141, 16.29320311889058, 17.012210977687634, 17.95102554722695, 18.831871411660373, 19.569552743871892, 20.595593985326776, 21.556536594889753, 22.595344000367078, 23.788379216233665, 24.950306764015803, 25.97118680651925, 27.387835275396036, 28.749678130977983, 29.835096914891903]
	y = [5.013220289625585, 5.572546133486681, 4.83721282146444, 3.801346529424993, 4.431950682741875, 3.770475534599094, 3.832691925807803, 2.9661320294514457, 2.7926709419923093, 3.4372472421742377, 2.3838432415346387, 2.3393215806888743, 2.4153439870712634, 1.8135518198449658, 3.1723061460169992, 1.8114554285597528, 1.5685168694381568, 1.6719261436412451, 1.1707882532439684, 1.535044546329311, 1.1547172908293866, 0.8546689332854508, 0.7723158613898501, 0.6745651066603027, 0.5130985663520592, 0.6026958526601233, 0.5611190538821655, 0.17629328178873482, 0.43017750862290965, 0.3231279235737276]
	surf_dens_from_plot(x, y)
end

# ╔═╡ 4b8ae796-742d-4edc-9c87-97826a490d4f
prof_umi_md = let
	# martinez-delgado+2001 bg subtracted
	x = [6.511079195732457, 12.078375051292573, 17.614895363151415, 23.057037340993023, 28.582273286828066, 34.02697989331145, 39.53221173574067, 45.11540828887977, 50.60525235945835, 56.08535084119819, 67.16249487074272, 78.27349199835864]
	y = [1.4773311266930884, 1.326771482078307, 1.0933539479987808, 0.8245503244632204, 0.5440311833108316, 0.3433430599712557, 0.0015025477984409452, -0.12366621662819555, -0.3362440660249989, -0.5538304080832717, -0.6641261269108488, -0.5912852227690432]

	surf_dens_from_plot(x, 10 .^ y)
end

# ╔═╡ 33f4c2aa-fc01-4f71-9c28-c79c4126fcfd
prof_umi_palma = let
	x = [3.393651144847543, 6.843631043603873, 10.258570168635764, 13.657129291147244, 20.460183872106548, 27.04990815683354, 33.93248752748862, 40.78465667668747, 47.71618947152965, 54.19511477390642, 61.14843398246341, 67.8809518504975, 75.01086049055203, 81.74345839646027, 88.4278320880245, 95.50983923786588, 121.94910310707179, 149.27615864579238, 176.79544397214357]
	y = [8.367107347919156, 7.173404854121636, 5.803637532710367, 3.978525693472169, 2.9607976420624915, 1.1131435814861095, 0.7489708032685642, 0.23905883865456243, 0.21815124206034642, 0.15155247628032165, 0.08925696885306258, 0.08792686039326335, 0.07126730116103845, 0.03503448920673088, 0.06373156827351083, 0.047758018125772024, 0.01812234935693242, 0.03046675189941488, 0.010823321499582882]

	surf_dens_from_plot(x, y)

end

# ╔═╡ bcbb9d6a-6b99-49c6-8bd6-ffe6b7739602
prof_umi_sato_major = let
	x = [2.816506890326771, 8.409899021840669, 13.866696481404942, 19.447523437275613, 24.77794002431016, 30.441820564984283, 35.48438177309061, 41.41232845760215, 46.825876280341426, 52.387853059538365, 57.690887012978855, 62.78838784479955, 69.04489568320092, 73.45162394960815, 79.66395891268346, 85.18347312816509]
	y = [106.4613134059435, 59.90545745925621, 32.10765567017933, 7.775716000490203, 2.8699070298292395, 1.988748268005301, 1.4661575718812558, 0.9630292147675485, 0.6708474070766045, 0.4781128233615646, 0.32878324400406556, 0.6630540758744532, 0.2840775076812935, 0.30396614978905606, 0.22362334369283512, 0.08493104440641504]

	surf_dens_from_plot(x, y)
end

# ╔═╡ 0ed2720d-2220-489a-8392-03f95027764a
prof_umi_sato_minor = let
	x = [2.7905615355776785, 8.455307173013596, 13.832153361952454, 19.454166331244547, 25.053264614872035, 30.713241306389644, 35.90702694509149, 41.65213292717819, 47.13872208071194, 52.37506057796316, 57.549545573052306, 63.11496004114744, 68.92048266915018, 73.07590259067526, 79.60341402771314, 85.78555995528703]
	y = [104.02427502744538, 58.65957150664925, 31.06560863741536, 7.499805079669077, 2.8881434017783314, 1.929247341737902, 1.4729451604202959, 0.9734425560793767, 0.6485406056141135, 0.4788399596461362, 0.3298850880983333, 0.6731035263067725, 0.28445421604624477, 0.30251192805382526, 0.22261211011472892, 0.08643642795088329]


	surf_dens_from_plot(x / (1 - 0.46), y)
end

# ╔═╡ 917c8053-da0a-4226-808e-9f02ea92a222
prof_umi_ih = let
	x = [0.7714429867980259, 1.9174788872470818, 2.6971928562343543, 3.4629020187933066, 4.219299446402017, 4.999782375331193, 5.742774118309672, 6.558513349095155, 7.317403723198111, 8.076702052276406, 8.932769939224041, 9.66353010981573, 10.35861559162735, 11.940931692608975, 11.940931692608975, 11.137307016924437, 12.785583439851452, 13.324038502849866, 14.162516625217378, 15.124164723644386, 15.765286374769339, 16.798313373594674, 17.96272951396602, 18.962969542661558, 19.80038751821533, 20.686848509352, 21.44746674602294, 22.319919224507505, 22.860092445596642, 24.58507822857947, 26.16409869747314, 30.128792593920362, 37.99098990082207, 47.707136891842794, 55.190291453451316, 61.03356240189908]
	y = [3.519514960274528, 3.8575549265862756, 3.8929720259236316, 3.2398947672327107, 2.195839099438655, 2.9264587273827396, 3.415655418468127, 2.5580333864171254, 2.46425362205618, 2.46425362205618, 1.9096851752686712, 1.6515474887033441, 2.7195516766609176, 1.8217823479885793, 1.8217823479885793, 1.784537667163541, 1.5178467226101842, 1.757220739573295, 1.5139227073686103, 1.464984621174007, 1.7977850302360556, 1.0913672270214625, 0.5331652507683602, 0.6906901397537294, 0.8034272218269215, 0.5891479678092707, 0.641958565115059, 0.40374955282048863, 0.49620273830968603, 0.3991053092246535, 0.3612382976629583, 0.11152048645593286, 0.08526691020607116, 0.058715940616551256, 0.10983078450557375, 0.07186435952847177]


	surf_dens_from_plot(x, y)
end

# ╔═╡ f4797072-3103-4f85-b6b5-a3906205d9b3
profiles_umi = OrderedDict(
	L"Gaia" => prof_umi,
	"UNIONS" => prof_umi_unions,
	"Sato+2025 (minor axis)" => prof_umi_sato_minor,
	"Palma+2003" => prof_umi_palma,
	"Martínez-Delgado+2001" => prof_umi_md,
	"Kleyna+1998" => prof_umi_kleyna,
	"IH1995" => prof_umi_ih,
	"Hodge1964" => prof_umi_hodge1964,
)

# ╔═╡ fa32b6b9-d09c-4dfe-8af1-a408043db231
@savefig "umi_literature_profiles" compare_profiles(profiles_umi, "ursa_minor"
)

# ╔═╡ Cell order:
# ╠═0125bdd2-f9db-11ef-3d22-63d25909a69a
# ╠═3d07fa5b-cb39-47e1-b932-d976cc1b0371
# ╠═5013a073-b6a5-417b-b124-393a18099eca
# ╠═e8526d14-429d-48f6-b1e2-a005d4f5d949
# ╠═f5c22abc-2634-4774-8516-fbd07aa690aa
# ╠═5eaf3b50-886e-47ac-9a7c-80d693bc3c17
# ╠═f22aa8a5-9116-4416-9f93-f61b6c7e2a81
# ╠═5bfee795-b988-4ffd-ac65-120c57648b29
# ╟─9e983a35-bb7d-4279-a9c0-190f9157007b
# ╠═a74de18f-e9df-437d-bdcd-da798f98d23a
# ╠═9a1a580e-c694-488e-9d64-da4470775b4a
# ╠═c725564c-e140-43da-8c6e-d40905b5aafc
# ╠═6a827bb5-d4ff-4155-ad52-daa0fac7654a
# ╠═01f49191-e27b-4bdc-9cbd-2c6f7dc1f17d
# ╠═338f8161-22a8-4176-a226-027f2bdf7c4a
# ╟─4e7b4c37-bbc9-4d4d-af4c-f3c7db628254
# ╠═3c032178-8d48-4f9c-bcec-9bf704718ea9
# ╠═e4bab11b-79a4-48cc-8a35-feac9968635e
# ╠═51a2acad-9802-4afd-9e0b-41bed0f00b2b
# ╠═f32e27e1-7d6a-4dca-9e57-b4559b4599da
# ╠═07a7f040-fd5c-407e-b63f-cfc40ecf6b88
# ╠═ffa9883d-746a-44d8-8fcf-590186570053
# ╠═9d80dd20-22f1-4cd9-99d0-3172968eb763
# ╠═6f8a6d1e-09eb-4db4-baf0-87d8c5036ef9
# ╠═21c92c92-5b85-4ff8-963c-f30082fb8bb9
# ╠═7bfb3333-fee9-4f0c-823a-0ebe00fff967
# ╠═4c87649b-c4e5-434f-b7b8-fe523dd6f430
# ╠═ed2f88ba-e6f7-416f-8482-849494f61070
# ╠═70b7159a-e5aa-470a-8c0d-edbdd613b25f
# ╠═f48e9a20-d6f8-4693-89a2-a814a005e612
# ╠═6e0ca29b-42aa-483b-9ce2-5de83445aadd
# ╠═8e84ee14-1209-4779-a870-7bf7827f0a03
# ╠═e89dd67f-0c45-48e4-8340-aeecc0da9e43
# ╠═4e2b6c97-b410-453b-aa98-db24bc9fe756
# ╠═ab0bcc9c-bc2a-449e-a8a3-467af6044abc
# ╠═e4f85a1e-c755-426c-9d93-71485bb2cf63
# ╠═492d5e36-289d-4df6-8267-2551b4d1da77
# ╠═316d12a7-54e8-42db-9ba2-5623e07164b9
# ╠═6755ed1a-5075-4148-b78a-8df77e50014a
# ╠═7efdd9e6-1970-4864-a177-616e256e5a7e
# ╠═f86d7b90-0147-4490-a995-3b347e9805ab
# ╠═6c04f96a-b14b-4c60-91de-716c9379491f
# ╠═4314ec9e-8359-4b2a-8eea-30f71d92b743
# ╠═a991a4fb-8037-485b-b48c-0f73d14bd0b5
# ╠═4cb354cb-4f07-4871-92dc-fd479b1b546d
# ╠═ad36eb3e-5a81-4803-ad8c-4583649c6b6f
# ╠═977f1b17-d0cd-414b-ac5d-9bd0e7e79f91
# ╠═186fbcec-d10a-4894-86c9-b0733dc9d7f1
# ╠═f8636f32-78b6-4237-aa13-cfcc0ec07d4a
# ╠═d8243837-f9fa-4fed-bd2d-f773d5abb021
# ╠═4b8ae796-742d-4edc-9c87-97826a490d4f
# ╠═33f4c2aa-fc01-4f71-9c28-c79c4126fcfd
# ╠═bcbb9d6a-6b99-49c6-8bd6-ffe6b7739602
# ╠═0ed2720d-2220-489a-8392-03f95027764a
# ╠═917c8053-da0a-4226-808e-9f02ea92a222
# ╠═f4797072-3103-4f85-b6b5-a3906205d9b3
# ╠═fa32b6b9-d09c-4dfe-8af1-a408043db231
